{"version":3,"sources":["scripts/main.js"],"names":["BASE_URL","request","url","fetch","then","response","ok","setTimeout","Promise","reject","Error","status","statusText","json","result","getPhones","showPhoneNames","phones","divBlock","document","createElement","id","phoneList","prepend","forEach","phone","phoneName","innerHTML","name","append","body","phoneIds","map","el","phoneDetailsArr","phoneId","push","all","values","catch","error","console","warn"],"mappings":";AAAA,aAIA,IAAMA,EAAW,4DAEXC,EAAU,SAACC,GACRC,OAAAA,MAASH,GAAAA,OAAAA,GAAWE,OAAAA,IACxBE,KAAK,SAAAC,GAQGA,OAPFA,EAASC,IACZC,WAAW,WACTC,QAAQC,OAAO,IAAIC,MACdL,GAAAA,OAAAA,EAASM,OAAYN,OAAAA,OAAAA,EAASO,eAClC,KAGEP,EAASQ,SAEjBT,KAAK,SAAAU,GACGA,OAAAA,KAIPC,EAAY,WAAMd,OAAAA,EAAN,iBAElB,SAASe,EAAeC,GAChBC,IAAAA,EAAWC,SAASC,cAAc,OAExCF,EAASG,GAAK,OAERC,IAAAA,EAAYH,SAASC,cAAc,MAEzCF,EAASK,QAAQD,GAEjBL,EAAOO,QAAQ,SAAAC,GACPC,IAAAA,EAAYP,SAASC,cAAc,MAEzCM,EAAUC,UAAYF,EAAMG,KAC5BN,EAAUO,OAAOH,KAGnBP,SAASW,KAAKD,OAAOX,GAGvBH,IACGX,KAAK,SAAAU,GAGGiB,OAFUjB,EAAOkB,IAAI,SAAAC,GAAMA,OAAAA,EAAGZ,OAItCjB,KAAK,SAAA2B,GACEG,IAAAA,EAAkB,GAQjBA,OANPH,EAASP,QAAQ,SAAAW,GACTV,IAAAA,EAAQxB,EAAmBkC,WAAAA,OAAAA,EAAjC,UAEAD,EAAgBE,KAAKX,KAGhBS,IAER9B,KAAK,SAAAU,GAAUN,OAAAA,QAAQ6B,IAAIvB,KAC3BV,KAAK,SAAAkC,GAEJtB,EAAesB,KAEhBC,MAAM,SAAAC,GAASC,OAAAA,QAAQC,KAAsBF,gBAAAA","file":"main.8f7e7154.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\n// write your code here\r\n\r\nconst BASE_URL = 'https://mate-academy.github.io/phone-catalogue-static/api';\r\n\r\nconst request = (url) => {\r\n  return fetch(`${BASE_URL}${url}`)\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        setTimeout(() => {\r\n          Promise.reject(new Error(\r\n            `${response.status} - ${response.statusText}`));\r\n        }, 5000);\r\n      };\r\n\r\n      return response.json();\r\n    })\r\n    .then(result => {\r\n      return result;\r\n    });\r\n};\r\n\r\nconst getPhones = () => request(`/phones.json`);\r\n\r\nfunction showPhoneNames(phones) {\r\n  const divBlock = document.createElement('div');\r\n\r\n  divBlock.id = 'info';\r\n\r\n  const phoneList = document.createElement('ol');\r\n\r\n  divBlock.prepend(phoneList);\r\n\r\n  phones.forEach(phone => {\r\n    const phoneName = document.createElement('li');\r\n\r\n    phoneName.innerHTML = phone.name;\r\n    phoneList.append(phoneName);\r\n  });\r\n\r\n  document.body.append(divBlock);\r\n}\r\n\r\ngetPhones()\r\n  .then(result => {\r\n    const phoneIds = result.map(el => el.id);\r\n\r\n    return phoneIds;\r\n  })\r\n  .then(phoneIds => {\r\n    const phoneDetailsArr = [];\r\n\r\n    phoneIds.forEach(phoneId => {\r\n      const phone = request(`/phones/${phoneId}.json`);\r\n\r\n      phoneDetailsArr.push(phone);\r\n    });\r\n\r\n    return phoneDetailsArr;\r\n  })\r\n  .then(result => Promise.all(result))\r\n  .then(values => {\r\n    // console.log(values);\r\n    showPhoneNames(values);\r\n  })\r\n  .catch(error => console.warn(`Phones error:`, error));\r\n"]}